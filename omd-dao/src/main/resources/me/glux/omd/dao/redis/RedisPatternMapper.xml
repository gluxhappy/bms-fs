<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.glux.omd.dao.redis.RedisPatternMapper" >
  <resultMap id="BaseResultMap" type="me.glux.omd.model.redis.RedisPattern" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="pattern" property="pattern" jdbcType="VARCHAR" />
    <result column="db" property="db" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="me.glux.omd.model.redis.RedisPattern" extends="BaseResultMap" >
    <result column="desp" property="desp" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pattern, db, name, creator
  </sql>
  <sql id="Blob_Column_List" >
    desp
  </sql>
  <select id="selectById" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from omd_redis_pattern
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from omd_redis_pattern
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="me.glux.omd.model.redis.RedisPattern" >
    insert into omd_redis_pattern (id, pattern, db, 
      name, creator, desp
      )
    values (#{id,jdbcType=BIGINT}, #{pattern,jdbcType=VARCHAR}, #{db,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{desp,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.glux.omd.model.redis.RedisPattern" >
    insert into omd_redis_pattern
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pattern != null" >
        pattern,
      </if>
      <if test="db != null" >
        db,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="desp != null" >
        desp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pattern != null" >
        #{pattern,jdbcType=VARCHAR},
      </if>
      <if test="db != null" >
        #{db,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="desp != null" >
        #{desp,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="me.glux.omd.model.redis.RedisPattern" >
    update omd_redis_pattern
    <set >
      <if test="pattern != null" >
        pattern = #{pattern,jdbcType=VARCHAR},
      </if>
      <if test="db != null" >
        db = #{db,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="desp != null" >
        desp = #{desp,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByIdWithBLOBs" parameterType="me.glux.omd.model.redis.RedisPattern" >
    update omd_redis_pattern
    set pattern = #{pattern,jdbcType=VARCHAR},
      db = #{db,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      desp = #{desp,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="me.glux.omd.model.redis.RedisPattern" >
    update omd_redis_pattern
    set pattern = #{pattern,jdbcType=VARCHAR},
      db = #{db,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from omd_redis_pattern
  </select>
</mapper>